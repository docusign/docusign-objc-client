#import <Foundation/Foundation.h>
#import "DSObject.h"

/**
* DocuSign REST API
* The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
*
* OpenAPI spec version: v2
* Contact: devcenter@docusign.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#import "DSAddressInformationV2.h"
#import "DSErrorDetails.h"
#import "DSForgottenPasswordInformation.h"
#import "DSGroup.h"
#import "DSNameValue.h"
#import "DSUserAccountManagementGranularInformation.h"


@protocol DSUserInformation
@end

@interface DSUserInformation : DSObject


@property(nonatomic) DSUserAccountManagementGranularInformation* accountManagementGranular;
/* The activation code the new user must enter when activating their account. [optional]
 */
@property(nonatomic) NSString* activationAccessCode;
/* Indicates the date and time the item was created. [optional]
 */
@property(nonatomic) NSString* createdDateTime;
/* The name/value pair information for the user custom setting. [optional]
 */
@property(nonatomic) NSArray<DSNameValue>* customSettings;
/*  [optional]
 */
@property(nonatomic) NSString* email;
/* Specifies whether the user is enabled for updates from DocuSign Connect. Valid values: true or false. [optional]
 */
@property(nonatomic) NSString* enableConnectForUser;

@property(nonatomic) DSErrorDetails* errorDetails;
/* The user’s first name.  Maximum Length: 50 characters. [optional]
 */
@property(nonatomic) NSString* firstName;

@property(nonatomic) DSForgottenPasswordInformation* forgottenPasswordInfo;
/* A list of the group information for groups to add the user to. Group information can be found by calling [ML:GET group information]. The only required parameter is groupId.   The parameters are:  * groupId – The DocuSign group ID for the group. * groupName – The name of the group * permissionProfileId – The ID of the permission profile associated with the group. * groupType – The group type.  [optional]
 */
@property(nonatomic) NSArray<DSGroup>* groupList;

@property(nonatomic) DSAddressInformationV2* homeAddress;
/* Contains the URI for an endpoint that you can use to retrieve the initials image. [optional]
 */
@property(nonatomic) NSString* initialsImageUri;
/* Determines if the feature set is actively set as part of the plan. [optional]
 */
@property(nonatomic) NSString* isAdmin;
/* Shows the date-time when the user last logged on to the system. [optional]
 */
@property(nonatomic) NSString* lastLogin;
/* The user’s last name.  Maximum Length: 50 characters. [optional]
 */
@property(nonatomic) NSString* lastName;
/* Shows the current status of the user’s password. Possible values are:   * password_reset * password_active * password_expired * password_locked * password_reset_failed   [optional]
 */
@property(nonatomic) NSString* loginStatus;
/* The user’s middle name.  Maximum Length: 50 characters. [optional]
 */
@property(nonatomic) NSString* middleName;
/*  [optional]
 */
@property(nonatomic) NSString* password;
/*  [optional]
 */
@property(nonatomic) NSString* passwordExpiration;
/*  [optional]
 */
@property(nonatomic) NSString* permissionProfileId;
/*  [optional]
 */
@property(nonatomic) NSString* permissionProfileName;
/*  [optional]
 */
@property(nonatomic) NSString* profileImageUri;
/* When set to **true**, specifies that an additional activation email is sent to the user if they fail a log on before activating their account.  [optional]
 */
@property(nonatomic) NSString* sendActivationOnInvalidLogin;
/* Contains the URI for an endpoint that you can use to retrieve the signature image. [optional]
 */
@property(nonatomic) NSString* signatureImageUri;
/* The suffix for the user's name.   Maximum Length: 50 characters.  [optional]
 */
@property(nonatomic) NSString* suffixName;
/* The title of the user. [optional]
 */
@property(nonatomic) NSString* title;
/*  [optional]
 */
@property(nonatomic) NSString* uri;
/*  [optional]
 */
@property(nonatomic) NSString* userId;
/*  [optional]
 */
@property(nonatomic) NSString* userName;
/*  [optional]
 */
@property(nonatomic) NSString* userProfileLastModifiedDate;
/*  The name/value pair information for user settings. These determine the actions that a user can take in the account. The `[ML:userSettings]` are listed and described below. [optional]
 */
@property(nonatomic) NSArray<DSNameValue>* userSettings;
/*  [optional]
 */
@property(nonatomic) NSString* userStatus;
/*  [optional]
 */
@property(nonatomic) NSString* userType;

@property(nonatomic) DSAddressInformationV2* workAddress;

@end
