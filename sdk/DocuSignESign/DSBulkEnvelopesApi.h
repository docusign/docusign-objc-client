#import <Foundation/Foundation.h>
#import "DSBulkEnvelopeStatus.h"
#import "DSBulkEnvelopesResponse.h"
#import "DSBulkRecipientsRequest.h"
#import "DSBulkRecipientsResponse.h"
#import "DSBulkRecipientsSummaryResponse.h"
#import "DSBulkRecipientsUpdateResponse.h"
#import "DSErrorDetails.h"
#import "DSApi.h"

/**
* DocuSign REST API
* The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
*
* OpenAPI spec version: v2
* Contact: devcenter@docusign.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/






@interface DSBulkEnvelopesApi_GetOptions : DSObject
/*
 * count Specifies the number of entries to return.
 */
@property NSString* count;
/*
 * include Specifies which entries are included in the response. Multiple entries can be included by using commas in the query string (example: ?include&#x3D;”failed,queued”)   Valid values are:   * all - Returns all entries. If present, overrides all other query settings. This is the default if no query string is provided. * failed - This only returns entries with a failed status. * queued - This only returns entries with a queued status. * sent – This only returns entries with a sent status.  
 */
@property NSString* include;
/*
 * startPosition Specifies the location in the list of envelopes from which to start.
 */
@property NSString* startPosition;

@end



@interface DSBulkEnvelopesApi_GetRecipientsOptions : DSObject
/*
 * includeTabs 
 */
@property NSString* includeTabs;
/*
 * startPosition 
 */
@property NSString* startPosition;

@end



@interface DSBulkEnvelopesApi_ListOptions : DSObject
/*
 * count The number of results to return. This can be 1 to 20.
 */
@property NSString* count;
/*
 * include 
 */
@property NSString* include;
/*
 * startPosition The position of the bulk envelope items in the response. This is used for repeated calls, when the number of bulk envelopes returned is too large for one return. The default value is 0.
 */
@property NSString* startPosition;

@end



@interface DSBulkEnvelopesApi: NSObject <DSApi>

extern NSString* kDSBulkEnvelopesApiErrorDomain;
extern NSInteger kDSBulkEnvelopesApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Deletes the bulk recipient file from an envelope.
/// Deletes the bulk recipient file from an envelope. This cannot be used if the envelope has been sent.  After using this, the `bulkRecipientsUri` property is not returned in subsequent GET calls for the envelope, but the recipient will remain as a bulk recipient.
///
/// @param accountId The external account number (int) or account ID Guid./// @param envelopeId The envelopeId Guid of the envelope being accessed./// @param recipientId The ID of the recipient being accessed.


///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSBulkRecipientsUpdateResponse*
-(NSNumber*) deleteRecipientsWithAccountId:
(NSString*) accountId  envelopeId:(NSString*) envelopeId  recipientId:(NSString*) recipientId 


 completionHandler: (void (^)(DSBulkRecipientsUpdateResponse* output, NSError* error)) handler;

/// Gets the status of a specified bulk send operation.
/// Retrieves the status information of a single bulk recipient batch. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. 
///
/// @param accountId The external account number (int) or account ID Guid./// @param batchId 

/// @param DSBulkEnvelopesApi_GetOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSBulkEnvelopeStatus*
-(NSNumber*) getWithAccountId:
(NSString*) accountId  batchId:(NSString*) batchId 

 options:(DSBulkEnvelopesApi_GetOptions*) options
 completionHandler: (void (^)(DSBulkEnvelopeStatus* output, NSError* error)) handler;

/// Gets the bulk recipient file from an envelope.
/// Retrieves the bulk recipient file information from an envelope that has a bulk recipient.
///
/// @param accountId The external account number (int) or account ID Guid./// @param envelopeId The envelopeId Guid of the envelope being accessed./// @param recipientId The ID of the recipient being accessed.

/// @param DSBulkEnvelopesApi_GetRecipientsOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSBulkRecipientsResponse*
-(NSNumber*) getRecipientsWithAccountId:
(NSString*) accountId  envelopeId:(NSString*) envelopeId  recipientId:(NSString*) recipientId 

 options:(DSBulkEnvelopesApi_GetRecipientsOptions*) options
 completionHandler: (void (^)(DSBulkRecipientsResponse* output, NSError* error)) handler;

/// Gets status information about bulk recipient batches.
/// Retrieves status information about all the bulk recipient batches. A bulk recipient batch is the set of envelopes sent from a single bulk recipient file. The response includes general information about each bulk recipient batch.   The response returns information about the envelopes sent with bulk recipient batches, including the `batchId` property, which can be used to retrieve a more detailed status of individual bulk recipient batches.
///
/// @param accountId The external account number (int) or account ID Guid.

/// @param DSBulkEnvelopesApi_ListOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSBulkEnvelopesResponse*
-(NSNumber*) listWithAccountId:
(NSString*) accountId 

 options:(DSBulkEnvelopesApi_ListOptions*) options
 completionHandler: (void (^)(DSBulkEnvelopesResponse* output, NSError* error)) handler;

/// Adds or replaces envelope bulk recipients.
/// Updates the bulk recipients in a draft envelope using a file upload. The Content-Type supported for uploading a bulk recipient file is CSV (text/csv).  The REST API does not support modifying individual rows or values in the bulk recipients file. It only allows the entire file to be added or replaced with a new file.
///
/// @param accountId The external account number (int) or account ID Guid./// @param envelopeId The envelopeId Guid of the envelope being accessed./// @param recipientId The ID of the recipient being accessed.
/// @param bulkRecipientsRequest  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSBulkRecipientsSummaryResponse*
-(NSNumber*) updateRecipientsWithAccountId:
(NSString*) accountId  envelopeId:(NSString*) envelopeId  recipientId:(NSString*) recipientId 
 bulkRecipientsRequest:(DSBulkRecipientsRequest*) bulkRecipientsRequest

 completionHandler: (void (^)(DSBulkRecipientsSummaryResponse* output, NSError* error)) handler;


@end
