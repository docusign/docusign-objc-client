#import <Foundation/Foundation.h>
#import "DSErrorDetails.h"
#import "DSSigningGroup.h"
#import "DSSigningGroupInformation.h"
#import "DSSigningGroupUsers.h"
#import "DSApi.h"

/**
* DocuSign REST API
* The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
*
* OpenAPI spec version: v2
* Contact: devcenter@docusign.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/









@interface DSSigningGroupsApi_ListOptions : DSObject
/*
 * groupType 
 */
@property NSString* groupType;
/*
 * includeUsers When set to **true**, the response includes the signing group members. 
 */
@property NSString* includeUsers;

@end






@interface DSSigningGroupsApi: NSObject <DSApi>

extern NSString* kDSSigningGroupsApiErrorDomain;
extern NSInteger kDSSigningGroupsApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Creates a signing group. 
/// Creates one or more signing groups.   Multiple signing groups can be created in one call. Only users with account administrator privileges can create signing groups.   An account can have a maximum of 50 signing groups. Each signing group can have a maximum of 50 group members.   Signing groups can be used by any account user.
///
/// @param accountId The external account number (int) or account ID Guid.
/// @param signingGroupInformation  (optional)

///  code:201 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupInformation*
-(NSNumber*) createListWithAccountId:
(NSString*) accountId 
 signingGroupInformation:(DSSigningGroupInformation*) signingGroupInformation

 completionHandler: (void (^)(DSSigningGroupInformation* output, NSError* error)) handler;

/// Deletes one or more signing groups.
/// Deletes one or more signing groups in the specified account.
///
/// @param accountId The external account number (int) or account ID Guid.
/// @param signingGroupInformation  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupInformation*
-(NSNumber*) deleteListWithAccountId:
(NSString*) accountId 
 signingGroupInformation:(DSSigningGroupInformation*) signingGroupInformation

 completionHandler: (void (^)(DSSigningGroupInformation* output, NSError* error)) handler;

/// Deletes  one or more members from a signing group.
/// Deletes  one or more members from the specified signing group. 
///
/// @param accountId The external account number (int) or account ID Guid./// @param signingGroupId 
/// @param signingGroupUsers  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupUsers*
-(NSNumber*) deleteUsersWithAccountId:
(NSString*) accountId  signingGroupId:(NSString*) signingGroupId 
 signingGroupUsers:(DSSigningGroupUsers*) signingGroupUsers

 completionHandler: (void (^)(DSSigningGroupUsers* output, NSError* error)) handler;

/// Gets information about a signing group. 
/// Retrieves information, including group member information, for the specified signing group. 
///
/// @param accountId The external account number (int) or account ID Guid./// @param signingGroupId 


///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroup*
-(NSNumber*) getWithAccountId:
(NSString*) accountId  signingGroupId:(NSString*) signingGroupId 


 completionHandler: (void (^)(DSSigningGroup* output, NSError* error)) handler;

/// Gets a list of the Signing Groups in an account.
/// Retrieves a list of all signing groups in the specified account.
///
/// @param accountId The external account number (int) or account ID Guid.

/// @param DSSigningGroupsApi_ListOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupInformation*
-(NSNumber*) listWithAccountId:
(NSString*) accountId 

 options:(DSSigningGroupsApi_ListOptions*) options
 completionHandler: (void (^)(DSSigningGroupInformation* output, NSError* error)) handler;

/// Gets a list of members in a Signing Group.
/// Retrieves the list of members in the specified Signing Group.
///
/// @param accountId The external account number (int) or account ID Guid./// @param signingGroupId 


///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupUsers*
-(NSNumber*) listUsersWithAccountId:
(NSString*) accountId  signingGroupId:(NSString*) signingGroupId 


 completionHandler: (void (^)(DSSigningGroupUsers* output, NSError* error)) handler;

/// Updates a signing group. 
/// Updates signing group name and member information. You can also add new members to the signing group. A signing group can have a maximum of 50 members. 
///
/// @param accountId The external account number (int) or account ID Guid./// @param signingGroupId 
/// @param signingGroup  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroup*
-(NSNumber*) updateWithAccountId:
(NSString*) accountId  signingGroupId:(NSString*) signingGroupId 
 signingGroup:(DSSigningGroup*) signingGroup

 completionHandler: (void (^)(DSSigningGroup* output, NSError* error)) handler;

/// Updates signing group names.
/// Updates the name of one or more existing signing groups. 
///
/// @param accountId The external account number (int) or account ID Guid.
/// @param signingGroupInformation  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupInformation*
-(NSNumber*) updateListWithAccountId:
(NSString*) accountId 
 signingGroupInformation:(DSSigningGroupInformation*) signingGroupInformation

 completionHandler: (void (^)(DSSigningGroupInformation* output, NSError* error)) handler;

/// Adds members to a signing group. 
/// Adds one or more new members to a signing group. A signing group can have a maximum of 50 members. 
///
/// @param accountId The external account number (int) or account ID Guid./// @param signingGroupId 
/// @param signingGroupUsers  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSSigningGroupUsers*
-(NSNumber*) updateUsersWithAccountId:
(NSString*) accountId  signingGroupId:(NSString*) signingGroupId 
 signingGroupUsers:(DSSigningGroupUsers*) signingGroupUsers

 completionHandler: (void (^)(DSSigningGroupUsers* output, NSError* error)) handler;


@end
