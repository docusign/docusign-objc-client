#import <Foundation/Foundation.h>
#import "DSErrorDetails.h"
#import "DSPowerForm.h"
#import "DSPowerFormSendersResponse.h"
#import "DSPowerFormsFormDataResponse.h"
#import "DSPowerFormsRequest.h"
#import "DSPowerFormsResponse.h"
#import "DSApi.h"

/**
* DocuSign REST API
* The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.
*
* OpenAPI spec version: v2
* Contact: devcenter@docusign.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/









@interface DSPowerFormsApi_GetPowerFormDataOptions : DSObject
/*
 * fromDate 
 */
@property NSString* fromDate;
/*
 * toDate 
 */
@property NSString* toDate;

@end



@interface DSPowerFormsApi_ListPowerFormSendersOptions : DSObject
/*
 * startPosition 
 */
@property NSString* startPosition;

@end



@interface DSPowerFormsApi_ListPowerFormsOptions : DSObject
/*
 * fromDate 
 */
@property NSString* fromDate;
/*
 * order 
 */
@property NSString* order;
/*
 * orderBy 
 */
@property NSString* orderBy;
/*
 * toDate 
 */
@property NSString* toDate;

@end



@interface DSPowerFormsApi: NSObject <DSApi>

extern NSString* kDSPowerFormsApiErrorDomain;
extern NSInteger kDSPowerFormsApiMissingParamErrorCode;

+(instancetype) sharedAPI;

/// Creates a new PowerForm.
///
/// @param accountId The external account number (int) or account ID Guid.
/// @param powerForm  (optional)

///  code:201 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerForm*
-(NSNumber*) createPowerFormWithAccountId:
(NSString*) accountId 
 powerForm:(DSPowerForm*) powerForm

 completionHandler: (void (^)(DSPowerForm* output, NSError* error)) handler;

/// Delete a PowerForm.
///
/// @param accountId The external account number (int) or account ID Guid./// @param powerFormId 


///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
-(NSNumber*) deletePowerFormWithAccountId:
(NSString*) accountId  powerFormId:(NSString*) powerFormId 


 completionHandler: (void (^)(NSError* error)) handler;

/// Deletes one or more PowerForms
///
/// @param accountId The external account number (int) or account ID Guid.
/// @param powerFormsRequest  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerFormsResponse*
-(NSNumber*) deletePowerFormsWithAccountId:
(NSString*) accountId 
 powerFormsRequest:(DSPowerFormsRequest*) powerFormsRequest

 completionHandler: (void (^)(DSPowerFormsResponse* output, NSError* error)) handler;

/// Returns a single PowerForm.
///
/// @param accountId The external account number (int) or account ID Guid./// @param powerFormId 


///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerForm*
-(NSNumber*) getPowerFormWithAccountId:
(NSString*) accountId  powerFormId:(NSString*) powerFormId 


 completionHandler: (void (^)(DSPowerForm* output, NSError* error)) handler;

/// Returns the form data associated with the usage of a PowerForm.
///
/// @param accountId The external account number (int) or account ID Guid./// @param powerFormId 

/// @param DSPowerFormsApi_GetPowerFormDataOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerFormsFormDataResponse*
-(NSNumber*) getPowerFormDataWithAccountId:
(NSString*) accountId  powerFormId:(NSString*) powerFormId 

 options:(DSPowerFormsApi_GetPowerFormDataOptions*) options
 completionHandler: (void (^)(DSPowerFormsFormDataResponse* output, NSError* error)) handler;

/// Returns the list of PowerForms available to the user.
///
/// @param accountId The external account number (int) or account ID Guid.

/// @param DSPowerFormsApi_ListPowerFormSendersOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerFormSendersResponse*
-(NSNumber*) listPowerFormSendersWithAccountId:
(NSString*) accountId 

 options:(DSPowerFormsApi_ListPowerFormSendersOptions*) options
 completionHandler: (void (^)(DSPowerFormSendersResponse* output, NSError* error)) handler;

/// Returns the list of PowerForms available to the user.
///
/// @param accountId The external account number (int) or account ID Guid.

/// @param DSPowerFormsApi_ListPowerFormsOptions Options for modifying the behavior of the function.
///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerFormsResponse*
-(NSNumber*) listPowerFormsWithAccountId:
(NSString*) accountId 

 options:(DSPowerFormsApi_ListPowerFormsOptions*) options
 completionHandler: (void (^)(DSPowerFormsResponse* output, NSError* error)) handler;

/// Creates a new PowerForm.
///
/// @param accountId The external account number (int) or account ID Guid./// @param powerFormId 
/// @param powerForm  (optional)

///  code:200 message:"Successful response.",
///  code:400 message:"Error encountered."
/// @return DSPowerForm*
-(NSNumber*) updatePowerFormWithAccountId:
(NSString*) accountId  powerFormId:(NSString*) powerFormId 
 powerForm:(DSPowerForm*) powerForm

 completionHandler: (void (^)(DSPowerForm* output, NSError* error)) handler;


@end
